package com.pixelPower.game;

import org.lwjgl.input.Keyboard;
import org.lwjgl.input.Mouse;
import org.lwjgl.opengl.GL11;
import org.lwjgl.util.vector.Vector3f;

public class Camera {
	private Vector3f vector = new Vector3f();
	private Vector3f rotation = new Vector3f();
	private Vector3f vectorPrevious = new Vector3f();
	
	private boolean moveForward = false;
	private boolean moveBackward = false;
	private boolean moveLeft = false;
	private boolean moveRight = false;
	
	private static final float speed = 0.3f;
	
	private Game game;
	
	public Camera(Game game){
		this.game = game;
		Mouse.setGrabbed(true);
	}
	
	public void update(){
		updatePrevious();
		input();
		updateVector();
	}
	
	public void updateVector(){
		if(moveForward){
			vector.x -= (float) (Math.sin(-rotation.y * Math.PI / 180) * speed);
			vector.z -= (float) (Math.cos(-rotation.y * Math.PI / 180) * speed);
		}
		
		if(moveBackward){
			vector.x += (float) (Math.sin(-rotation.y * Math.PI / 180) * speed);
			vector.z += (float) (Math.cos(-rotation.y * Math.PI / 180) * speed);
		}
		
		if(moveLeft){
			vector.x += (float) (Math.sin((-rotation.y - 90) * Math.PI / 180) * speed);
			vector.z += (float) (Math.cos((-rotation.y - 90) * Math.PI / 180) * speed);
		}
		
		if(moveRight){
			vector.x += (float) (Math.sin((-rotation.y + 90) * Math.PI / 180) * speed);
			vector.z += (float) (Math.cos((-rotation.y + 90) * Math.PI / 180) * speed);
		}
	}
	
	public void translatePostion(){
		GL11.glRotatef(rotation.x, 1, 0, 0);
		GL11.glRotatef(rotation.y, 0, 1, 0);
		GL11.glRotatef(rotation.z, 0, 0, 1);
		GL11.glTranslatef(-vector.x, -vector.y - 3.0f, -vector.z);
	}
	
	public void updatePrevious(){
		vectorPrevious.x = vector.x;
		vectorPrevious.y = vector.y;
		vectorPrevious.z = vector.z;
	}
	
	public void input(){
		moveForward = game.keys[Keyboard.KEY_W];
		moveBackward = game.keys[Keyboard.KEY_S];
		moveLeft = game.keys[Keyboard.KEY_A];
		moveRight = game.keys[Keyboard.KEY_D];
		
		if(Mouse.isGrabbed()){
			float mouseDX = Mouse.getDX() * 0.8f * 0.16f;
			float mouseDY = Mouse.getDY() * 0.8f * 0.16f;
			if (rotation.y + mouseDX >= 360) {
				rotation.y = rotation.y + mouseDX - 360;
			} else if (rotation.y + mouseDX < 0) {
				rotation.y = 360 - rotation.y + mouseDX;
			} else {
				rotation.y += mouseDX;
			}
			if (rotation.x - mouseDY >= -89 && rotation.x - mouseDY <= 89) {
				rotation.x += -mouseDY;
			} else if (rotation.x - mouseDY < -89) {
				rotation.x = -89;
			} else if (rotation.x - mouseDY > 89) {
				rotation.x = 89;
			}
		}
	}
}
